<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.philips.dao.CcdTestRuleMapper" >
  <resultMap id="BaseResultMap" type="com.cn.philips.pojo.CcdTestRule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="planId" property="planid" jdbcType="INTEGER" />
    <result column="isBriActivated" property="isbriactivated" jdbcType="INTEGER" />
    <result column="briConditionA" property="briconditiona" jdbcType="INTEGER" />
    <result column="briConditionB" property="briconditionb" jdbcType="INTEGER" />
    <result column="isColorActivated" property="iscoloractivated" jdbcType="INTEGER" />
    <result column="colorConditionA" property="colorconditiona" jdbcType="INTEGER" />
    <result column="colorConditionB" property="colorconditionb" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, planId, isBriActivated, briConditionA, briConditionB, isColorActivated, colorConditionA, 
    colorConditionB
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cn.philips.pojo.CcdTestRuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ccd_test_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ccd_test_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ccd_test_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cn.philips.pojo.CcdTestRuleExample" >
    delete from ccd_test_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cn.philips.pojo.CcdTestRule" >
    insert into ccd_test_rule (id, planId, isBriActivated, 
      briConditionA, briConditionB, isColorActivated, 
      colorConditionA, colorConditionB)
    values (#{id,jdbcType=INTEGER}, #{planid,jdbcType=INTEGER}, #{isbriactivated,jdbcType=INTEGER}, 
      #{briconditiona,jdbcType=INTEGER}, #{briconditionb,jdbcType=INTEGER}, #{iscoloractivated,jdbcType=INTEGER}, 
      #{colorconditiona,jdbcType=INTEGER}, #{colorconditionb,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.philips.pojo.CcdTestRule" >
    insert into ccd_test_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="planid != null" >
        planId,
      </if>
      <if test="isbriactivated != null" >
        isBriActivated,
      </if>
      <if test="briconditiona != null" >
        briConditionA,
      </if>
      <if test="briconditionb != null" >
        briConditionB,
      </if>
      <if test="iscoloractivated != null" >
        isColorActivated,
      </if>
      <if test="colorconditiona != null" >
        colorConditionA,
      </if>
      <if test="colorconditionb != null" >
        colorConditionB,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="planid != null" >
        #{planid,jdbcType=INTEGER},
      </if>
      <if test="isbriactivated != null" >
        #{isbriactivated,jdbcType=INTEGER},
      </if>
      <if test="briconditiona != null" >
        #{briconditiona,jdbcType=INTEGER},
      </if>
      <if test="briconditionb != null" >
        #{briconditionb,jdbcType=INTEGER},
      </if>
      <if test="iscoloractivated != null" >
        #{iscoloractivated,jdbcType=INTEGER},
      </if>
      <if test="colorconditiona != null" >
        #{colorconditiona,jdbcType=INTEGER},
      </if>
      <if test="colorconditionb != null" >
        #{colorconditionb,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cn.philips.pojo.CcdTestRuleExample" resultType="java.lang.Integer" >
    select count(*) from ccd_test_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ccd_test_rule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.planid != null" >
        planId = #{record.planid,jdbcType=INTEGER},
      </if>
      <if test="record.isbriactivated != null" >
        isBriActivated = #{record.isbriactivated,jdbcType=INTEGER},
      </if>
      <if test="record.briconditiona != null" >
        briConditionA = #{record.briconditiona,jdbcType=INTEGER},
      </if>
      <if test="record.briconditionb != null" >
        briConditionB = #{record.briconditionb,jdbcType=INTEGER},
      </if>
      <if test="record.iscoloractivated != null" >
        isColorActivated = #{record.iscoloractivated,jdbcType=INTEGER},
      </if>
      <if test="record.colorconditiona != null" >
        colorConditionA = #{record.colorconditiona,jdbcType=INTEGER},
      </if>
      <if test="record.colorconditionb != null" >
        colorConditionB = #{record.colorconditionb,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ccd_test_rule
    set id = #{record.id,jdbcType=INTEGER},
      planId = #{record.planid,jdbcType=INTEGER},
      isBriActivated = #{record.isbriactivated,jdbcType=INTEGER},
      briConditionA = #{record.briconditiona,jdbcType=INTEGER},
      briConditionB = #{record.briconditionb,jdbcType=INTEGER},
      isColorActivated = #{record.iscoloractivated,jdbcType=INTEGER},
      colorConditionA = #{record.colorconditiona,jdbcType=INTEGER},
      colorConditionB = #{record.colorconditionb,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.philips.pojo.CcdTestRule" >
    update ccd_test_rule
    <set >
      <if test="planid != null" >
        planId = #{planid,jdbcType=INTEGER},
      </if>
      <if test="isbriactivated != null" >
        isBriActivated = #{isbriactivated,jdbcType=INTEGER},
      </if>
      <if test="briconditiona != null" >
        briConditionA = #{briconditiona,jdbcType=INTEGER},
      </if>
      <if test="briconditionb != null" >
        briConditionB = #{briconditionb,jdbcType=INTEGER},
      </if>
      <if test="iscoloractivated != null" >
        isColorActivated = #{iscoloractivated,jdbcType=INTEGER},
      </if>
      <if test="colorconditiona != null" >
        colorConditionA = #{colorconditiona,jdbcType=INTEGER},
      </if>
      <if test="colorconditionb != null" >
        colorConditionB = #{colorconditionb,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.philips.pojo.CcdTestRule" >
    update ccd_test_rule
    set planId = #{planid,jdbcType=INTEGER},
      isBriActivated = #{isbriactivated,jdbcType=INTEGER},
      briConditionA = #{briconditiona,jdbcType=INTEGER},
      briConditionB = #{briconditionb,jdbcType=INTEGER},
      isColorActivated = #{iscoloractivated,jdbcType=INTEGER},
      colorConditionA = #{colorconditiona,jdbcType=INTEGER},
      colorConditionB = #{colorconditionb,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>